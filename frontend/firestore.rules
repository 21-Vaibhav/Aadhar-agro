rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isSuperAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superAdmin';
    }

    function isOrderManager() {
      return isAuthenticated() && (
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'ordermanager' ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superAdmin'
      );
    }

    // User profiles
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && isOwner(userId);
      allow update, delete: if isAuthenticated() && (isOwner(userId) || isSuperAdmin());
    }

    // Orders
    match /orders/{orderId} {
      allow read: if isAuthenticated() && (
        isOwner(resource.data.userId) || 
        isOrderManager()
      );
      allow create: if isAuthenticated() && isOwner(request.resource.data.userId);
      allow update: if isAuthenticated() && (
        isOwner(resource.data.userId) || 
        isOrderManager()
      );
      allow delete: if false; // Never delete orders, only update status
    }

    // Products
    match /products/{productId} {
      allow read: if true; // Anyone can view products
      allow write: if isSuperAdmin(); // Only super admin can modify products
    }

    // Cart items
    match /carts/{userId}/items/{itemId} {
      allow read, write: if isAuthenticated() && isOwner(userId);
    }

    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
}